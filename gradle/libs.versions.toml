[versions]
spring-boot = "3.4.4"
spring-dep-mgmt = "1.1.7"
spring-kafka = "3.3.6"
flyway = "11.9.1"
loki = "1.6.0"
jts = "1.19.0"
hibernate-spatial = "6.4.2.Final"
jjwt = "0.11.5"
mapstruct = "1.5.5.Final"
postgresql = "42.7.2" # Example version
jedis = "5.1.0"        # Example version
micrometer = "1.12.3"  # Example version
junit-platform-launcher = "1.10.2" # Example version

[libraries]
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "spring-boot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
spring-boot-starter-quartz = { module = "org.springframework.boot:spring-boot-starter-quartz", version.ref = "spring-boot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-kafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "spring-kafka" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-kafka-test = { module = "org.springframework.kafka:spring-kafka-test", version.ref = "spring-kafka" }

flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }

loki-logback = { module = "com.github.loki4j:loki-logback-appender", version.ref = "loki" }
jts-core = { module = "org.locationtech.jts:jts-core", version.ref = "jts" }
hibernate-spatial = { module = "org.hibernate:hibernate-spatial", version.ref = "hibernate-spatial" }
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }

mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }

lombok = { module = "org.projectlombok:lombok", version = "1.18.30" } # Adjust if needed
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring-boot" }

postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
jedis = { module = "redis.clients:jedis", version.ref = "jedis" }
micrometer-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer" }

junit-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junit-platform-launcher" }

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dep-mgmt" }
flyway = { id = "org.flywaydb.flyway", version.ref = "flyway" }